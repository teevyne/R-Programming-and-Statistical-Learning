
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> dt <- read.csv(file.choose(), header = T)
> dt <- read.csv(file.choose(), header = T)
> head(dt)
  Season Month Date Temperature
1 Winter   Jan    1         2.3
2 Winter   Jan    2         2.2
3 Winter   Jan    3         2.4
4 Winter   Jan    4         2.8
5 Winter   Jan    5         2.5
6 Winter   Jan    6         2.4
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> glimpse(dt)
Rows: 365
Columns: 4
$ Season      <chr> "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "...
$ Month       <chr> "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan"...
$ Date        <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 2, 3, 4, 5, 6...
$ Temperature <dbl> 2.3, 2.2, 2.4, 2.8, 2.5, 2.4, 2.8, 3.0, 2.4, 2.9, 2.4, 2.5, 2.6, 2.9, 3.4, 3.9, 3.3, 3.3, 2.8, 2.4, 2.7, 2.8, 2.7, 2.4, 3.5, 3.8, 2...
> dt$Season <- as.factor(dr$Season)
Error in is.factor(x) : object 'dr' not found
> dt$Season <- as.factor(dt$Season)
> glimpse(dt)
Rows: 365
Columns: 4
$ Season      <fct> Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Winter, Win...
$ Month       <chr> "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan"...
$ Date        <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 1, 2, 3, 4, 5, 6...
$ Temperature <dbl> 2.3, 2.2, 2.4, 2.8, 2.5, 2.4, 2.8, 3.0, 2.4, 2.9, 2.4, 2.5, 2.6, 2.9, 3.4, 3.9, 3.3, 3.3, 2.8, 2.4, 2.7, 2.8, 2.7, 2.4, 3.5, 3.8, 2...
> levels(dt$Season)
[1] "Rainy"  "Summer" "Winter"
> m1 <- aov(dt$Temperature~dt$Season)
> summary(m1)
             Df Sum Sq Mean Sq F value   Pr(>F)    
dt$Season     2   9.70   4.848   25.32 5.08e-11 ***
Residuals   362  69.29   0.191                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> TukeyHSD(ml)
Error in TukeyHSD(ml) : object 'ml' not found
> TukeyHSD(m1)
  Tukey multiple comparisons of means
    95% family-wise confidence level

Fit: aov(formula = dt$Temperature ~ dt$Season)

$`dt$Season`
                     diff         lwr        upr     p adj
Summer-Rainy   0.05979508 -0.07258434  0.1921745 0.5376924
Winter-Rainy  -0.31128215 -0.44284519 -0.1797191 0.0000002
Winter-Summer -0.37107724 -0.50318954 -0.2389649 0.0000000

> dt%>%geoup_by(Season)%>%summarise(Mean_T=mean(Temperature))
Error in geoup_by(., Season) : could not find function "geoup_by"
> dt%>%group_by(Season)%>%summarise(Mean_T=mean(Temperature))
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 3 x 2
  Season Mean_T
  <fct>   <dbl>
1 Rainy    3.09
2 Summer   3.15
3 Winter   2.78
> 3.15-3.09
[1] 0.06
> 2.78-3.09
[1] -0.31
> 2.78-3.15
[1] -0.37
> data('iris')
> head(iris)
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa
> 
> 
> ml <- lm(Sepal.Lemgth~Petal.Length, data=iris)
Error in eval(predvars, data, env) : object 'Sepal.Lemgth' not found
> ml <- lm(Sepal.Length~Petal.Length, data=iris)
> summary(ml)

Call:
lm(formula = Sepal.Length ~ Petal.Length, data = iris)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.24675 -0.29657 -0.01515  0.27676  1.00269 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)   4.30660    0.07839   54.94   <2e-16 ***
Petal.Length  0.40892    0.01889   21.65   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.4071 on 148 degrees of freedom
Multiple R-squared:   0.76,     Adjusted R-squared:  0.7583 
F-statistic: 468.6 on 1 and 148 DF,  p-value: < 2.2e-16

> ml$coef
 (Intercept) Petal.Length 
   4.3066034    0.4089223 
> confint.lm(ml, level = 0.90)
                   5 %      95 %
(Intercept)  4.1768529 4.4363540
Petal.Length 0.3776531 0.4401915
> par(mfrow = c(2,2))
> plot(ml)
> fix(iris)
> 
> m2 <- (Sepal.Length~Petal.Length, data=iris[-c(15,132,136)],)
Error: unexpected ',' in "m2 <- (Sepal.Length~Petal.Length,"
> m2 <- lm(Sepal.Length~Petal.Length, data=iris[-c(15,132,136)],)
> summary(m2)

Call:
lm(formula = Sepal.Length ~ Petal.Length, data = iris[-c(15, 
    132, 136)])

Residuals:
     Min       1Q   Median       3Q      Max 
-1.24675 -0.29657 -0.01515  0.27676  1.00269 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)   4.30660    0.07839   54.94   <2e-16 ***
Petal.Length  0.40892    0.01889   21.65   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.4071 on 148 degrees of freedom
Multiple R-squared:   0.76,     Adjusted R-squared:  0.7583 
F-statistic: 468.6 on 1 and 148 DF,  p-value: < 2.2e-16

> shapiro.test(m2$residuals)

        Shapiro-Wilk normality test

data:  m2$residuals
W = 0.99298, p-value = 0.6767

> # H0 : Residuals are normally distributed
> # H1 : Residuals are not normally distributed
> # p > 0.05. We fail to reject the null hypothesis (The above H0 and H1 should be interchanged)
> par(mfrow = (2,2))
Error: unexpected ',' in "par(mfrow = (2,"
> par(mfrow = c(2,2))
> plot(2$residuals)
Error in 2$residuals : $ operator is invalid for atomic vectors
> plot(m2$residuals)
> hist(m2$residuals)